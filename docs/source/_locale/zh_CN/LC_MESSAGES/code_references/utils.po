# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Fallen_Breath
# This file is distributed under the same license as the MCDReforged
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: MCDReforged \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-04-04 03:39+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../code_references/utils.rst:5
msgid "Utilities"
msgstr "实用工具"

#: ../code_references/utils.rst:7
msgid ":doc:`API package </plugin_dev/api>` path: ``mcdreforged.api.utils``"
msgstr ":doc:`API  包 </plugin_dev/api>` 路径: ``mcdreforged.api.utils``"

#: mcdreforged.utils.serializer.serialize:1 of
msgid ""
"A utility function to serialize any object into a json-like python "
"object. Here, being json-like means that the return value can be passed "
"to e.g. :func:`json.dumps` directly"
msgstr ""
"一个工具函数，用于把任何对象序列化成一个 json 样式的 python 对象。在这里，拥有着 json "
"风格意味着其返回值可以直接作为参数传递给如 :func:`json.dumps`"

#: mcdreforged.utils.serializer.serialize:4 of
msgid "Serialization rules:"
msgstr "序列化规则："

#: mcdreforged.utils.serializer.serialize:6 of
msgid ""
"Immutable object, including :data:`None`, :class:`int`, :class:`float`, "
":class:`str` and :class:`bool`, will be directly returned"
msgstr ""
"不可变对象，包括 :data:`None`、:class:`int`、:class:`float`、:class:`str` 以及 "
":class:`bool`，会被直接返回"

#: mcdreforged.utils.serializer.serialize:7 of
msgid ""
":class:`list` and :class:`tuple` will be serialized into a :class:`list` "
"will all the items serialized"
msgstr ":class:`list` 和 :class:`tuple` 会被转换成一个所含元素均被序列化的 :class:`list` 对象"

#: mcdreforged.utils.serializer.serialize:8 of
msgid ""
":class:`dict` will be converted into a :class:`dict` will all the keys "
"and values serialized"
msgstr ":class:`dict` 会被转换成一个所有键和值都被序列化的 :class:`dict`"

#: mcdreforged.utils.serializer.serialize:9 of
msgid ""
"Normal object will be converted to a :class:`dict` with all of its public"
" fields. The keys are the name of the fields and the values are the "
"serialized field values"
msgstr "普通的对象会被转换成一个包含了其所有公开属性的 :class:`dict`。键为属性的名字，值为序列化后的属性值"

#: mcdreforged.utils.serializer.serialize:14 of
msgid ""
"If the object is a :class:`Serializable`, the value field order will "
"follow the order in the annotation"
msgstr "如果对象是一个 :class:`Serializable`，那么其属性的顺序将与注解中顺序的保持一致"

#: mcdreforged.utils.serializer.Serializable.__init__
#: mcdreforged.utils.serializer.Serializable.merge_from
#: mcdreforged.utils.serializer.Serializable.validate_attribute
#: mcdreforged.utils.serializer.deserialize
#: mcdreforged.utils.serializer.serialize of
msgid "Parameters"
msgstr "参数"

#: mcdreforged.utils.serializer.serialize:16 of
msgid "The object to be serialized"
msgstr "被序列化的对象"

#: mcdreforged.utils.serializer.Serializable.get_field_annotations
#: mcdreforged.utils.serializer.deserialize
#: mcdreforged.utils.serializer.serialize of
msgid "Returns"
msgstr "返回值"

#: mcdreforged.utils.serializer.serialize:17 of
msgid "The serialized result"
msgstr "序列化结果"

#: mcdreforged.utils.serializer.deserialize:1 of
msgid ""
"A utility function to deserialize a json-like object into an object in "
"given class"
msgstr "一个工具函数，用于把一个 json 样式的 python 对象反序列化成给定的类"

#: mcdreforged.utils.serializer.deserialize:3 of
msgid ""
"If the target class contains nested items / fields, corresponding "
"detailed type annotations are required. The items / fields will be "
"deserialized recursively"
msgstr "如果目标类包含嵌套的元素 / 属性，那么它们需要拥有详细的类型注解。这些元素 / 属性会被递归地反序列化"

#: mcdreforged.utils.serializer.deserialize:6 of
msgid "Supported target classes:"
msgstr "支持的目标类："

#: mcdreforged.utils.serializer.deserialize:8 of
msgid ""
"Immutable object: :data:`None`, :class:`int`, :class:`float`, "
":class:`str` and :class:`bool`"
msgstr ""
"不可变对象：:data:`None`、:class:`int`、:class:`float`、:class:`str` 以及 "
":class:`bool`"

#: mcdreforged.utils.serializer.deserialize:10 of
msgid ""
"The class of the input data should equal to target class. No implicit "
"type conversion will happen"
msgstr "输入数据的类应该等于目标类。没有隐式类型转换"

#: mcdreforged.utils.serializer.deserialize:11 of
msgid ""
"As an exception, :class:`float` also accepts an :class:`int` as the input"
" data"
msgstr "一个例外，:class:`float` 还接受 :class:`int` 作为输入数据"

#: mcdreforged.utils.serializer.deserialize:13 of
msgid ""
"Standard container: :class:`list`, :class:`dict`. Type of its content "
"should be type annotated"
msgstr "标准容器：:class:`list`, :class:`dict`。需要用类型注解表示容器中的元素"

#: mcdreforged.utils.serializer.deserialize:15 of
msgid ""
":class:`typing.List`, :class:`list`: Target class needs to be e.g. "
"``List[int]`` or ``list[int]`` (python 3.9+)"
msgstr ""
":class:`typing.List`, :class:`list`：目标类应当形如 ``List[int]`` 或 ``list[int]``"
" (python 3.9+)"

#: mcdreforged.utils.serializer.deserialize:16 of
msgid ""
":class:`typing.Dict`, :class:`dict`: Target class needs to be e.g. "
"``Dict[str, bool]`` or ``dict[str, bool]`` (python 3.9+)"
msgstr ""
":class:`typing.Dict`, :class:`dict`：目标类应当形如 ``Dict[str, bool]`` 或 "
"``dict[str, bool]`` (python 3.9+)"

#: mcdreforged.utils.serializer.deserialize:18 of
msgid "Types in the :external:doc:`typing <library/typing>` module:"
msgstr ":external:doc:`typing <library/typing>` 模块中的类型"

#: mcdreforged.utils.serializer.deserialize:20 of
msgid ""
":data:`typing.Union`: Iterate through its available candidate classes, "
"and return the first successful deserialization result"
msgstr ":data:`typing.Union`：遍历所有可能的候选类，返回第一个成功的反序列化结果"

#: mcdreforged.utils.serializer.deserialize:21 of
msgid ""
":data:`typing.Optional`: Actually it will be converted to a "
":data:`typing.Union` automatically"
msgstr ":data:`typing.Optional`：实际上它会被自动转换为 :data:`typing.Union`"

#: mcdreforged.utils.serializer.deserialize:22 of
msgid ":data:`typing.Any`: The input data will be directed returned as the result"
msgstr ":data:`typing.Any`：输入数据会被直接作为结果返回"

#: mcdreforged.utils.serializer.deserialize:23 of
msgid ""
":data:`typing.Literal`: The input data needs to be in parameter the of "
":data:`~typing.Literal`, then the input data will be returned as the "
"result"
msgstr ""
":data:`typing.Literal`：输入数据需要存在于 :data:`~typing.Literal` "
"的参数列表中，然后输入数据会被作为结果返回"

#: mcdreforged.utils.serializer.deserialize:25 of
msgid ""
"Normal class: The class should have its fields type annotated. It's "
"constructor should accept 0 input parameter. Example class::"
msgstr "普通类：这个类应当类型注解完善其所有属性，并且其构造函数应当可接受 0 个入参。类例子："

#: mcdreforged.utils.serializer.deserialize:32 of
msgid ""
"The input data needs to be a dict. Keys and values in the dict correspond"
" to the field names and serialized field values. Example dict::"
msgstr "输入数据应该是一个 dict。dict 中的键和值对应着属性的名称以及序列化的属性值。dict 例子："

#: mcdreforged.utils.serializer.deserialize:36 of
msgid "Fields are set via ``__setattr__``, non-public fields will be ignored."
msgstr "将使用 ``__setattr__`` 设置对象的属性，非公开属性将被忽略"

#: mcdreforged.utils.serializer.deserialize:38 of
msgid "The json-like object to be deserialized"
msgstr "被反序列化的 json 样式的对象"

#: mcdreforged.utils.serializer.deserialize:39 of
msgid "The target class of the generated object"
msgstr "目标类，同时也是返回值的类型"

#: mcdreforged.utils.serializer.Serializable.copy
#: mcdreforged.utils.serializer.Serializable.on_deserialization
#: mcdreforged.utils.serializer.Serializable.validate_attribute
#: mcdreforged.utils.serializer.deserialize of
msgid "Keyword Arguments"
msgstr "关键字参数"

#: mcdreforged.utils.serializer.deserialize:40 of
msgid ""
"A flag indicating if an exception should be risen if there are any not-"
"assigned fields when deserializing an object. Default false"
msgstr "一个用于标识在反序列化一个对象的过程中，若对象存在未被赋值的属性，是否应该抛出异常的 flag。默认值为 false"

#: mcdreforged.utils.serializer.deserialize:42 of
msgid ""
"A flag indicating if an exception should be risen if there are any "
"unknown input attributes when deserializing an object. Default false"
msgstr "一个用于标识在反序列化一个对象的过程中，若出现未知的输入属性，是否应该抛出异常的 flag。默认值为 false"

#: mcdreforged.utils.serializer.Serializable.validate_attribute
#: mcdreforged.utils.serializer.deserialize of
msgid "Raises"
msgstr "抛出"

#: mcdreforged.utils.serializer.deserialize:44 of
msgid "If input data doesn't match target class, or target class is unsupported"
msgstr "若输入数据与目标类不匹配，或者目标类不在支持范围"

#: mcdreforged.utils.serializer.deserialize:45 of
msgid ""
"If input data is invalid, including :data:`Literal <typing.Literal>` "
"mismatch and those error flag in kwargs taking effect"
msgstr ""
"如果输入数据非法，这包括 :data:`Literal <typing.Literal>` 匹配失败，以及那些 kwargs 里的抛异常 flag"
" 起了效果"

#: mcdreforged.utils.serializer.deserialize:47 of
msgid "An object in class ``cls``"
msgstr "一个类型为 ``cls`` 的对象"

#: mcdreforged.utils.serializer.deserialize:49 of
msgid "Added :data:`typing.Literal` support"
msgstr "增加对 :data:`typing.Literal` 的支持"

#: mcdreforged.utils.serializer.Serializable:1 of
msgid "An abstract class for easy serializing / deserializing"
msgstr "一个用于便捷序列化/反序列化的抽象类"

#: mcdreforged.utils.serializer.Serializable:3 of
msgid ""
"Inherit it and declare the fields of your class with type annotations, "
"that's all you need to do"
msgstr "继承它，并在你的子类中使用类型注解声明属性，你所需要做的就这么多"

#: mcdreforged.utils.serializer.Serializable:5 of
msgid "Example::"
msgstr "例子::"

#: mcdreforged.utils.serializer.Serializable:22 of
msgid ":class:`Serializable` class nesting is also supported::"
msgstr "类 :class:`Serializable` 的嵌套也是支持的::"

#: mcdreforged.utils.serializer.Serializable:29 of
msgid ""
"You can also declare default value when declaring type annotations, then "
"during deserializing, if the value is missing, a :func:`copy.copy` of the"
" default value will be assigned"
msgstr "你也可以在声明类型注解时声明属性的默认值，这样在反序列化的过程中，如果值缺失，则默认值的 :func:`copy.copy` 将会被赋值"

#: mcdreforged.utils.serializer.Serializable:49 of
msgid "Enum class will be serialized into its member name::"
msgstr "枚举类会被序列化为它的枚举成员名称::"

#: mcdreforged.utils.serializer.Serializable.__init__:1 of
msgid "Create a :class:`Serializable` object with given field values"
msgstr "使用给定的属性值创建一个 :class:`Serializable` 对象"

#: mcdreforged.utils.serializer.Serializable.__init__:3 of
msgid ""
"Unspecified public fields with default value in the type annotation will "
"be set to a copy (:func:`copy.copy`) of the default value"
msgstr "未指定的，在类型注解中含有默认值的属性，将被设为默认值的一个拷贝（:func:`copy.copy`）"

#: mcdreforged.utils.serializer.Serializable.__init__:5 of
msgid ""
"A dict storing to-be-set values of its fields. It's keys are field names "
"and values are field values"
msgstr "一个储存着用于设置属性的值的 dict。dict 的键为属性名，值为属性值"

#: mcdreforged.utils.serializer.Serializable.get_field_annotations:1 of
msgid "A helper method to extract field annotations of the class"
msgstr "一个用来提取类的属性注解声明的辅助方法"

#: mcdreforged.utils.serializer.Serializable.get_field_annotations:3 of
msgid ""
"Only public fields will be extracted. Protected and private fields will "
"be ignored"
msgstr "只有公开属性会被提取。保护或私有的属性会被忽略"

#: mcdreforged.utils.serializer.Serializable.get_field_annotations:5 of
msgid "The return value will be cached for reuse"
msgstr "返回值会被缓存，以便于复用"

#: mcdreforged.utils.serializer.Serializable.get_field_annotations:7 of
msgid ""
"A dict of the field annotation of the class. The keys are the field name,"
" and the values are the type annotation of the field"
msgstr "一个储存了这个类声明的属性注解的 dict。其中键为属性名，值为对应属性的类型注解"

#: mcdreforged.utils.serializer.Serializable.serialize:1 of
msgid "Serialize itself into a dict via function :func:`serialize`"
msgstr "借助函数 :func:`serialize`，将自身序列化为一个 dict"

#: mcdreforged.utils.serializer.Serializable.deserialize:1 of
msgid ""
"Deserialize a dict into an object of this class via function "
":func:`deserialize`"
msgstr "借助函数 :func:`deserialize`，将一个 dict 反序列化为一个这个类的实例"

#: mcdreforged.utils.serializer.Serializable.deserialize:3 of
msgid ""
"When there are missing fields, automatically copy the class's default "
"value if possible. See :meth:`__init__` for more details"
msgstr "如果存在缺失的属性，若可能，自动从类定义中拷贝默认值。见 :meth:`__init__` 以了解更多的信息"

#: mcdreforged.utils.serializer.Serializable.get_default:1 of
msgid "Create an object of this class with default values"
msgstr "构造一个使用默认值的这个类的实例"

#: mcdreforged.utils.serializer.Serializable.get_default:3 of
msgid "Actually it just invokes the constructor of the class with 0 argument"
msgstr "事实上，这个方法做的仅仅是不带参数地调用这个类的构造函数"

#: mcdreforged.utils.serializer.Serializable.merge_from:1 of
msgid "Merge attributes from another instance into the current one"
msgstr "将另一个实例的属性合并到当前实例中"

#: mcdreforged.utils.serializer.Serializable.merge_from:5 of
msgid ""
"It won't create copies of the attribute values being "
"merged"
msgstr "合并时，不会创建被合并属性的拷贝"

#: mcdreforged.utils.serializer.Serializable.merge_from:7 of
msgid ""
"If you want the merged values to be independent, you can make a "
":meth:`deep copy <copy>` of the other object first, and then merge from "
"the copy"
msgstr "如果你想要合并后的属性与另一个实例再无关联，你可以首先创建一个另一对象的 :meth:`深拷贝 <copy>`，然后合并这个拷贝"

#: mcdreforged.utils.serializer.Serializable.merge_from:10 of
msgid "The other object to merge attributes from"
msgstr "被合并属性的对象"

#: mcdreforged.utils.serializer.Serializable.copy:1 of
msgid ""
"Make a copy of the object. Only fields declared in the class annotation "
"will be copied"
msgstr "创建一份此对象的拷贝。只有在类的注解中声明了的属性会被拷贝"

#: mcdreforged.utils.serializer.Serializable.copy:3 of
msgid "By default, a deep copy will be made"
msgstr "默认情况下，创建深拷贝"

#: mcdreforged.utils.serializer.Serializable.copy:5 of
msgid "If this operation make a deep copy. True: deep copy, False: shallow copy"
msgstr "是否应该创建深拷贝。True：深拷贝，False：浅拷贝"

#: mcdreforged.utils.serializer.Serializable.copy:9 of
msgid "Added ``deep`` keyword argument"
msgstr "添加 ``deep`` 关键字参数"

#: mcdreforged.utils.serializer.Serializable.validate_attribute:1 of
msgid ""
"A method that will be invoked before setting value to an attribute during"
" the deserialization"
msgstr "一个将于反序列化期间，在设置属性值之前被调用的方法"

#: mcdreforged.utils.serializer.Serializable.validate_attribute:3 of
msgid ""
"You can validate the to-be-set attribute value in this method, and raise "
"some :exc:`ValueError` for bad values"
msgstr "你可以在这个方法中验证即将设置的属性值，并对期望之外的值抛出 :exc:`ValueError` 异常"

#: mcdreforged.utils.serializer.Serializable.validate_attribute:5 of
msgid "The name of the attribute to be set"
msgstr "将被设置的属性的名字"

#: mcdreforged.utils.serializer.Serializable.validate_attribute:6 of
msgid "The value of the attribute to be set"
msgstr "将被设置的属性值"

#: mcdreforged.utils.serializer.Serializable.on_deserialization:5
#: mcdreforged.utils.serializer.Serializable.validate_attribute:7 of
msgid "Placeholder"
msgstr "占位符"

#: mcdreforged.utils.serializer.Serializable.validate_attribute:8 of
msgid "If the validation failed"
msgstr "若验证失败"

#: mcdreforged.utils.serializer.Serializable.on_deserialization:1 of
msgid "Invoked after being fully deserialized"
msgstr "一个将在反序列化完成后被调用的方法"

#: mcdreforged.utils.serializer.Serializable.on_deserialization:3 of
msgid "You can do some custom initialization here"
msgstr "你可以在这里做一些自定义的初始化操作"
